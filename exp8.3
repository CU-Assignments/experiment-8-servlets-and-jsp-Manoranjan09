import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

@WebServlet("/AttendanceServlet")
public class AttendanceServlet extends HttpServlet {
    private static final long serialVersionUID = 1L;
    
    // Database configuration
    private static final String JDBC_URL = "jdbc:mysql://localhost:3306/student_portal";
    private static final String JDBC_USER = "root";
    private static final String JDBC_PASSWORD = "password";
    
    protected void doGet(HttpServletRequest request, HttpServletResponse response) 
            throws ServletException, IOException {
        try {
            List<Student> students = getAllStudents();
            request.setAttribute("students", students);
            request.getRequestDispatcher("/attendance.jsp").forward(request, response);
        } catch (SQLException e) {
            throw new ServletException("Error retrieving students", e);
        }
    }
    
    protected void doPost(HttpServletRequest request, HttpServletResponse response) 
            throws ServletException, IOException {
        String date = request.getParameter("date");
        String[] studentIds = request.getParameterValues("studentId");
        String[] statuses = request.getParameterValues("status");
        String[] remarks = request.getParameterValues("remarks");
        
        try (Connection conn = DriverManager.getConnection(JDBC_URL, JDBC_USER, JDBC_PASSWORD)) {
            // Insert attendance records
            String sql = "INSERT INTO attendance (student_id, date, status, remarks) VALUES (?, ?, ?, ?)";
            PreparedStatement stmt = conn.prepareStatement(sql);
            
            for (int i = 0; i < studentIds.length; i++) {
                stmt.setInt(1, Integer.parseInt(studentIds[i]));
                stmt.setString(2, date);
                stmt.setString(3, statuses[i]);
                stmt.setString(4, remarks[i]);
                stmt.addBatch();
            }
            
            stmt.executeBatch();
            
            // Set success message
            request.setAttribute("message", "Attendance recorded successfully!");
            request.setAttribute("messageType", "success");
            
        } catch (SQLException e) {
            request.setAttribute("message", "Error recording attendance: " + e.getMessage());
            request.setAttribute("messageType", "error");
        }
        
        doGet(request, response);
    }
    
    private List<Student> getAllStudents() throws SQLException {
        List<Student> students = new ArrayList<>();
        
        try (Connection conn = DriverManager.getConnection(JDBC_URL, JDBC_USER, JDBC_PASSWORD);
             PreparedStatement stmt = conn.prepareStatement("SELECT * FROM students");
             ResultSet rs = stmt.executeQuery()) {
            
            while (rs.next()) {
                Student student = new Student();
                student.setStudentId(rs.getInt("student_id"));
                student.setRollNumber(rs.getString("roll_number"));
                student.setName(rs.getString("name"));
                student.setDepartment(rs.getString("department"));
                students.add(student);
            }
        }
        
        return students;
    }
}

class Student {
    private int studentId;
    private String rollNumber;
    private String name;
    private String department;
    
    // Getters and setters
    public int getStudentId() {
        return studentId;
    }
    public void setStudentId(int studentId) {
        this.studentId = studentId;
    }
    public String getRollNumber() {
        return rollNumber;
    }
    public void setRollNumber(String rollNumber) {
        this.rollNumber = rollNumber;
    }
    public String getName() {
        return name;
    }
    public void setName(String name) {
        this.name = name;
    }
    public String getDepartment() {
        return department;
    }
    public void setDepartment(String department) {
        this.department = department;
    }
}

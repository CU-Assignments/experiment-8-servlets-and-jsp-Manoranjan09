import java.io.IOException;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

@WebServlet("/EmployeeServlet")
public class EmployeeServlet extends HttpServlet {
    private static final long serialVersionUID = 1L;
    
    // Database configuration
    private static final String JDBC_URL = "jdbc:mysql://localhost:3306/your_database";
    private static final String JDBC_USER = "your_username";
    private static final String JDBC_PASSWORD = "your_password";
    
    protected void doGet(HttpServletRequest request, HttpServletResponse response) 
            throws ServletException, IOException {
        
        response.setContentType("text/html");
        PrintWriter out = response.getWriter();
        
        String searchId = request.getParameter("searchId");
        
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            
            if (searchId != null && !searchId.isEmpty()) {
                // Search employee by ID
                Employee employee = getEmployeeById(searchId);
                displayEmployee(out, employee);
            } else {
                // Display all employees
                List<Employee> employees = getAllEmployees();
                displayAllEmployees(out, employees);
            }
            
        } catch (ClassNotFoundException | SQLException e) {
            out.println("<p>Error: " + e.getMessage() + "</p>");
            e.printStackTrace();
        }
        
        // Display search form
        displaySearchForm(out);
    }
    
    private Employee getEmployeeById(String id) throws SQLException {
        Employee employee = null;
        
        try (Connection conn = DriverManager.getConnection(JDBC_URL, JDBC_USER, JDBC_PASSWORD);
             PreparedStatement stmt = conn.prepareStatement(
                     "SELECT * FROM employees WHERE id = ?")) {
            
            stmt.setInt(1, Integer.parseInt(id));
            ResultSet rs = stmt.executeQuery();
            
            if (rs.next()) {
                employee = new Employee();
                employee.setId(rs.getInt("id"));
                employee.setName(rs.getString("name"));
                employee.setDepartment(rs.getString("department"));
                employee.setSalary(rs.getDouble("salary"));
            }
        }
        
        return employee;
    }
    
    private List<Employee> getAllEmployees() throws SQLException {
        List<Employee> employees = new ArrayList<>();
        
        try (Connection conn = DriverManager.getConnection(JDBC_URL, JDBC_USER, JDBC_PASSWORD);
             PreparedStatement stmt = conn.prepareStatement("SELECT * FROM employees");
             ResultSet rs = stmt.executeQuery()) {
            
            while (rs.next()) {
                Employee employee = new Employee();
                employee.setId(rs.getInt("id"));
                employee.setName(rs.getString("name"));
                employee.setDepartment(rs.getString("department"));
                employee.setSalary(rs.getDouble("salary"));
                employees.add(employee);
            }
        }
        
        return employees;
    }
    
    private void displaySearchForm(PrintWriter out) {
        out.println("<h2>Search Employee by ID</h2>");
        out.println("<form method='get' action='EmployeeServlet'>");
        out.println("Employee ID: <input type='text' name='searchId'>");
        out.println("<input type='submit' value='Search'>");
        out.println("</form>");
    }
    
    private void displayAllEmployees(PrintWriter out, List<Employee> employees) {
        out.println("<h2>Employee List</h2>");
        out.println("<table border='1'>");
        out.println("<tr><th>ID</th><th>Name</th><th>Department</th><th>Salary</th></tr>");
        
        for (Employee emp : employees) {
            out.println("<tr>");
            out.println("<td>" + emp.getId() + "</td>");
            out.println("<td>" + emp.getName() + "</td>");
            out.println("<td>" + emp.getDepartment() + "</td>");
            out.println("<td>" + emp.getSalary() + "</td>");
            out.println("</tr>");
        }
        
        out.println("</table>");
    }
    
    private void displayEmployee(PrintWriter out, Employee employee) {
        if (employee != null) {
            out.println("<h2>Employee Details</h2>");
            out.println("<table border='1'>");
            out.println("<tr><th>ID</th><th>Name</th><th>Department</th><th>Salary</th></tr>");
            out.println("<tr>");
            out.println("<td>" + employee.getId() + "</td>");
            out.println("<td>" + employee.getName() + "</td>");
            out.println("<td>" + employee.getDepartment() + "</td>");
            out.println("<td>" + employee.getSalary() + "</td>");
            out.println("</tr>");
            out.println("</table>");
        } else {
            out.println("<p>No employee found with the given ID.</p>");
        }
    }
}

class Employee {
    private int id;
    private String name;
    private String department;
    private double salary;
    
    // Getters and setters
    public int getId() {
        return id;
    }
    public void setId(int id) {
        this.id = id;
    }
    public String getName() {
        return name;
    }
    public void setName(String name) {
        this.name = name;
    }
    public String getDepartment() {
        return department;
    }
    public void setDepartment(String department) {
        this.department = department;
    }
    public double getSalary() {
        return salary;
    }
    public void setSalary(double salary) {
        this.salary = salary;
    }
}
